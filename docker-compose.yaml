version: '3.9'

services:
  app:
    build:
      context: node
    container_name: app
    environment:
      - NODE_ENV=production
    command: >
      sh -c 'if [ "$NODE_ENV" = "development" ]; then
                dockerize -wait tcp://db:3306 -timeout 50s nodemon index.js;
              else
                dockerize -wait tcp://db:3306 -timeout 50s node index.js;
              fi'
    networks:
      - application-network
    tty: true
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./node:/usr/src/app
      - /usr/src/app/node_modules

  db:
    image: mysql:8.0
    container_name: db
    restart: always
    tty: true
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - application-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: nginx
    container_name: nginx
    ports:
      - "8080:8080"
    networks:
      - application-network
    depends_on:
      - app
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf

networks:
  application-network:
    driver: bridge

volumes:
  mysql-data:
